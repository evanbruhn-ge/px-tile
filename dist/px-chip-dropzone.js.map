{"version":3,"sources":["px-chip-dropzone.es6.js"],"names":["Polymer","is","properties","chips","type","Array","value","defaultMessage","String","addChip","name","includes","push","removeChip","index","indexOf","splice","_sortChipsByName","a","b"],"mappings":"aAAA;;;;;;;;;;;;;;;GAiBA,CAAC,UAAW,CACVA,QAAQ,CACNC,GAAI,kBADE,CAGNC,WAAY,CACV;;SAGAC,MAAO,CACLC,KAAMC,KADD,CAELC,MAAO,gBAAW,CAChB,MAAO,EACR,CAJI,CAJG,CAUV;;SAGAC,eAAgB,CACdH,KAAMI,MADQ,CAEdF,MAAO,gBAFO,CAbN,CAHN,CAqBN;;OAGAG,QAAS,iBAASC,IAAT,CAAe,CACtB,GAAI,CAAC,KAAKP,KAAL,CAAWQ,QAAX,CAAoBD,IAApB,CAAL,CAAgC,KAAKE,IAAL,CAAU,OAAV,CAAmBF,IAAnB,CACjC,CA1BK,CA2BN;;OAGAG,WAAY,oBAASH,IAAT,CAAe,CACzB,GAAMI,OAAQ,KAAKX,KAAL,CAAWY,OAAX,CAAmBL,IAAnB,CAAd,CACA,GAAII,OAAS,CAAC,CAAd,CAAiB,CACf,KAAKE,MAAL,CAAY,OAAZ,CAAqBF,KAArB,CAA4B,CAA5B,CACD,CACF,CAnCK,CAoCN;;OAGAG,iBAAkB,0BAASC,CAAT,CAAYC,CAAZ,CAAe,CAC/B,MAAOD,GAAIC,CACZ,CAzCK,CAAR,CA2CD,CA5CD","file":"px-chip-dropzone.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2018, General Electric\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  Polymer({\n    is: 'px-chip-dropzone',\n\n    properties: {\n      /**\n       * An array of strings that's reflected as nested px-chips within this component.\n       */\n      chips: {\n        type: Array,\n        value: function() {\n          return [];\n        }\n      },\n      /**\n       * The message to display when the chips array is empty.\n       */\n      defaultMessage: {\n        type: String,\n        value: 'No chips, pal.'\n      }\n    },\n    /**\n     * Add a chip by name\n     */\n    addChip: function(name) {\n      if (!this.chips.includes(name)) this.push('chips', name);\n    },\n    /**\n     * Remove a chip by name\n     */\n    removeChip: function(name) {\n      const index = this.chips.indexOf(name);\n      if (index != -1) {\n        this.splice('chips', index, 1);\n      }\n    },\n    /**\n     * Sort function used by dom-repeat template, sorts chips alphabetically\n     */\n    _sortChipsByName: function(a, b) {\n      return a > b;\n    }\n  });\n})();\n"]}